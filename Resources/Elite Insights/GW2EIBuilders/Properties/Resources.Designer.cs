//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GW2EIBuilders.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GW2EIBuilders.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////*global animator, animateCanvas, noUpdateTime, deadIcon, dcIcon, downAllyIcon, downEnemyIcon*/
        ///&quot;use strict&quot;;
        /////// ACTORS
        ///
        ///function IsPresentInArray(array) {
        ///    var time = animator.reactiveDataStatus.time;
        ///    for (let i = 0; i &lt; array.length; i += 2) {
        ///        if (array[i] &lt;= time &amp;&amp; array[i + 1] &gt;= time) {
        ///            return true;
        ///        }
        ///    }
        ///    return false;
        ///}
        ///
        ///class IconDrawable {
        ///    constructor(params, p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string actors {
            get {
                return ResourceManager.GetString("actors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////* global logData*/
        ///// const images
        ///&quot;use strict&quot;;
        ///
        ///function compileCRTemplates() {
        ///    TEMPLATE_CR_COMPILE
        ///};
        ///
        ///const noUpdateTime = -1;
        ///const updateText = -2;
        ///const deadIcon = new Image();
        ///deadIcon.crossOrigin = &quot;Anonymous&quot;;
        ///deadIcon.onload = function () {
        ///    animateCanvas(noUpdateTime);
        ///};
        ///const downEnemyIcon = new Image();
        ///downEnemyIcon.crossOrigin = &quot;Anonymous&quot;;
        ///downEnemyIcon.onload = function () {
        ///    animat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string animator {
            get {
                return ResourceManager.GetString("animator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script&gt;
        ///
        ///    &quot;use strict&quot;;
        ///
        ///    /*\
        ///    |*|
        ///    |*|  Base64 / binary data / UTF-8 strings utilities
        ///    |*|
        ///    |*|  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding
        ///    |*|
        ///    \*/
        ///
        ///    /* Array of bytes to Base64 string decoding */
        ///
        ///    function b64ToUint6(nChr) {
        ///
        ///        return nChr &gt; 64 &amp;&amp; nChr &lt; 91 ?
        ///            nChr - 65
        ///            : nChr &gt; 96 &amp;&amp; nChr &lt; 123 ?
        ///                nChr - 71
        ///                : nChr &gt; 47 &amp;&amp; nChr &lt; 58 ?
        ///                [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string compressionUtils {
            get {
                return ResourceManager.GetString("compressionUtils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .table th {
        ///    border-top: 0;
        ///}
        ///
        ///.form-control {
        ///    padding: 0.300rem 0.4rem;
        ///}
        ///
        ///.theme-slate g.hovertext text.name {
        ///    fill: #cccccc !important;
        ///}
        ///
        ///.theme-yeti g.hovertext text.name {
        ///    fill: #495057 !important;
        ///}
        ///
        ///.theme-slate g.hovertext rect {
        ///    fill: #272B30 !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.theme-yeti g.hovertext rect {
        ///    fill: #fff !important;
        ///    fill-opacity: 0.9 !important;
        ///}
        ///
        ///.scrollable-y {
        ///    overflow-y: auto;
        ///    scrollbar-width: thin;
        ///}        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string css {
            get {
                return ResourceManager.GetString("css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ////* jshint node: true */
        ////*jslint browser: true */
        ////*global animator, ToRadians, overheadAnimationFrame, maxOverheadAnimationFrame, facingIcon, animateCanvas, noUpdateTime, SkillDecorationCategory*/
        ///&quot;use strict&quot;;
        ///
        ///class GenericMetadata {
        ///    constructor(params) {
        ///
        ///    }
        ///}
        ///
        ///class TextMetadata extends GenericMetadata{
        ///    constructor(params) {
        ///        super(params);
        ///        this.color = params.color;
        ///        this.backgroundColor = params.backgroundColor;
        ///    }
        ///}
        ///
        ///cl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string decorations {
            get {
                return ResourceManager.GetString("decorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function computeGradient(left, percent, right) {
        ///    var template = &quot;linear-gradient(to right, $fill$, $middle$, $black$)&quot;;
        ///    var res = percent;
        ///    var fillPercent = left + &quot; &quot; + res + &quot;%&quot;;
        ///    var blackPercent = right + &quot; &quot; + (100 - res) + &quot;%&quot;;
        ///    var middle = res + &quot;%&quot;;
        ///    template = template.replace(&quot;$fill$&quot;, fillPercent);
        ///    template = template.replace(&quot;$black$&quot;, blackPercent);
        ///    template = template.replace(&quot;$middle$&quot;, middle);
        ///    return templ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string functions {
            get {
                return ResourceManager.GetString("functions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///let apiRenderServiceOkay = true;
        ///let useDarthmaim = false;
        ///
        ///const quickColor = {
        ///    r: 220,
        ///    g: 20,
        ///    b: 220
        ///};
        ///const slowColor = {
        ///    r: 220,
        ///    g: 125,
        ///    b: 30
        ///};
        ///const normalColor = {
        ///    r: 125,
        ///    g: 125,
        ///    b: 125
        ///};
        ///
        ///const DamageType = {
        ///    All: 0,
        ///    Power: 1,
        ///    Condition: 2,
        ///    Breakbar: 3
        ///};
        ///
        ///const GraphType = {
        ///    DPS: 0,
        ///    Damage: 1,
        ///    CenteredDPS: 2
        ///};
        ///
        ///const reactiveLogdata = {
        ///    phases: [],
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string global {
            get {
                return ResourceManager.GetString("global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function healingGraphTypeEnumToString(mode, healingMode) {
        ///    let name = &quot;&quot;;
        ///    switch (mode) {
        ///        case GraphType.DPS:
        ///            name = healingMode === HealingType.Barrier ? &quot;BPS&quot; : &quot;HPS&quot;;
        ///            break;
        ///        case GraphType.CenteredDPS:
        ///            name = healingMode === HealingType.Barrier ? &quot;Centered BPS&quot; : &quot;Centered HPS&quot;;
        ///            break;
        ///        case GraphType.Damage:
        ///            name = healingMode === HealingType.Barrier ? &quot;Barrier&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string healingExtFunctions {
            get {
                return ResourceManager.GetString("healingExtFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///
        ///function compileHealingExtTemplates() {
        ///    TEMPLATE_HEALING_EXT_COMPILE
        ///};
        ///
        ///const healingGraphComponent = {
        ///    data: function() {
        ///        return {     
        ///            graphhealingdata: {
        ///                hpsmode: 0,
        ///                graphmode: logData.wvw ? GraphType.Damage : GraphType.DPS,
        ///                healingmode: HealingType.All,
        ///            },
        ///        };
        ///    },
        ///};
        ///
        ///const HealingType = {
        ///    All: 0,
        ///    HealingPower: 1,
        ///    Conversion: 2,
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string healingExtGlobals {
            get {
                return ResourceManager.GetString("healingExtGlobals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///&quot;use strict&quot;;
        ///function compileTemplates() {
        ///    Vue.component(&quot;custom-numberform-component&quot;, {
        ///        props: [&quot;minValue&quot;, &quot;maxValue&quot;, &quot;id&quot;, &quot;placeholderValue&quot;],
        ///        template: `
        ///        &lt;div&gt;
        ///            &lt;input class=&quot;form-control&quot; type=&quot;number&quot; :id=&quot;id&quot;
        ///                @onkeypress=&quot;return isNumber(event)&quot; onpaste=&quot;return false;&quot; step=&quot;2&quot; 
        ///                    :value=&quot;placeholderValue&quot; data-bind=&quot;value:replyNumber, fireChange: true&quot;
        ///                    :min=&quot;minValue&quot; : [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main_js {
            get {
                return ResourceManager.GetString("main_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        ///
        ///var numberComponent = {
        ///    methods: {
        ///        // https://stackoverflow.com/questions/16637051/adding-space-between-numbers
        ///        integerWithSpaces: function(x) {
        ///            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, &quot; &quot;);
        ///        },
        ///        round: function (value) {
        ///            if (isNaN(value) || !isFinite(value)) {
        ///                return 0;
        ///            }
        ///            return Math.round(value);
        ///        },
        ///        round1: function (value) {
        ///            if (isNaN(val [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mixins {
            get {
                return ResourceManager.GetString("mixins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div style=&quot;position:absolute; margin-top: 60px;  margin-left: 145px; z-index: 1;&quot;&gt;
        ///            &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; title=&quot;Filter Skills&quot; style=&quot;font-size: 1.1em;&quot;&gt;
        ///                Skills &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;
        ///            &lt;/a&gt;
        ///            &lt;ul class=&quot;dropdown-menu p-2 font-weight-normal scrollabledropdown&quot; style=&quot;min-width: 165px; max-width: 165px;&quot;&gt;
        ///                &lt;div class=&quot;d-flex flex-column justify-content-center align-ite [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplAdvancedRotation {
            get {
                return ResourceManager.GetString("tmplAdvancedRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBarrierDistPlayer {
            get {
                return ResourceManager.GetString("tmplBarrierDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot; class=&quot;mb-1 mt-1&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                    {{actor.name}} did {{round3(100*barrierdist.contributedBarrier/barrierdist.totalBarrier)}}% of its master&apos;s total
        ///                    {{istarget ? &apos;Target&apos; :&apos;&apos;}} barrier ({{barrierdist.contributedBarrier}})
        ///                &lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div v-else&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBarrierDistTable {
            get {
                return ResourceManager.GetString("tmplBarrierDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBarrierTakenDistPlayer {
            get {
                return ResourceManager.GetString("tmplBarrierTakenDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;buffMode = 0&quot; :class=&quot;{active: buffMode === 0}&quot;
        ///                       data-original-title=&quot;Buffs upkeep.&quot;&gt;Uptime&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;buffMode = 1&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffStats {
            get {
                return ResourceManager.GetString("tmplBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;    
        ///        &lt;div :key=&quot;&apos;activedurationplayer&apos;&quot; class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;activeduration = 0&quot; data-original-title=&quot;Buffs upkeep applied by each player to the selected player based on currently selected phase.&quot;
        ///                       :class=&quot;{active: activeduration === 0}&quot;&gt;Phase dur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffStatsPlayer {
            get {
                return ResourceManager.GetString("tmplBuffStatsPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Conditions&lt;/h3&gt;
        ///            &lt;buff-table-component :condition=&quot;true&quot; :generation=&quot;true&quot; :id=&quot;&apos;condition-stats-target-table-&apos; + target.id&quot; :buffs=&quot;conditions&quot;
        ///                :playerdata=&quot;condiData&quot; :sums=&quot;condiSums&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;&lt;/buff-table-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-show=&quot;hasBoons&quot; class=&quot;mt-2&quot;&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Boons&lt;/h3&gt;
        ///            &lt;buff-table-component :cond [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffStatsTarget {
            get {
                return ResourceManager.GetString("tmplBuffStatsTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Uptimes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Volumes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;buff-tables-component v-if=&quot;tab == 0&quot; :key=&quot;&apos;buff-tables&apos;&quot; :type=&quot;tab&quot; :phaseindex=&quot;phaseindex&quot;
        ///                :playeri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffTab {
            get {
                return ResourceManager.GetString("tmplBuffTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div v-if=&quot;buffs.length &gt; 0&quot;&gt;
        ///        &lt;img v-if=&quot;generation&quot; class=&quot;mb-1 icon&quot; :src=&quot;UIIcons.QuestionMark&quot;
        ///            :data-original-title=&quot;tooltipExpl&quot; /&gt;
        ///        &lt;div v-if=&quot;colPageCount &gt; 0&quot;&gt;
        ///            &lt;table-scroll-component :min=&quot;0&quot; :max=&quot;colPageCount&quot; :width=&quot;&apos;600px&apos;&quot; :height=&quot;&apos;10px&apos;&quot; :transform=&quot;transFormString&quot; :pagestructure=&quot;colStructure&quot;&gt;&lt;/table-scroll-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffTable {
            get {
                return ResourceManager.GetString("tmplBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Boons&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Offensive Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasSupBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 2}&quot; @click=&quot;tab = 2&quot;&gt;Support Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffTables {
            get {
                return ResourceManager.GetString("tmplBuffTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;buffMode = 0&quot; :class=&quot;{active: buffMode === 0}&quot;
        ///                       data-original-title=&quot;Incoming buffs applications.&quot;&gt;Incoming&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @cli [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffVolumeStats {
            get {
                return ResourceManager.GetString("tmplBuffVolumeStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;    
        ///        &lt;div :key=&quot;&apos;activedurationplayer&apos;&quot; class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;activeduration = 0&quot; data-original-title=&quot;Buffs volumes applied by each player to the selected player based on currently selected phase.&quot;
        ///                       :class=&quot;{active: activeduration === 0}&quot;&gt;Phase du [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffVolumeStatsPlayer {
            get {
                return ResourceManager.GetString("tmplBuffVolumeStatsPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Conditions&lt;/h3&gt;
        ///            &lt;buff-volume-table-component :outgoing=&quot;true&quot; :id=&quot;&apos;condition-volume-stats-target-table-&apos; + target.id&quot; :buffs=&quot;conditions&quot;
        ///                :playerdata=&quot;condiData&quot; :sums=&quot;condiSums&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;&lt;/buff-volume-table-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-show=&quot;hasBoons&quot; class=&quot;mt-2&quot;&gt;
        ///            &lt;h3 class=&quot;text-center&quot;&gt;Boons&lt;/h3&gt;
        ///            &lt;buff-volume-table-compone [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffVolumeStatsTarget {
            get {
                return ResourceManager.GetString("tmplBuffVolumeStatsTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div v-if=&quot;buffs.length &gt; 0&quot;&gt;
        ///        &lt;img v-if=&quot;outgoing&quot; class=&quot;mb-1 icon&quot; :src=&quot;UIIcons.QuestionMark&quot;
        ///            :data-original-title=&quot;tooltipExplOut&quot; /&gt;
        ///        &lt;img v-if=&quot;!outgoing&quot; class=&quot;mb-1 icon&quot; :src=&quot;UIIcons.QuestionMark&quot;
        ///            :data-original-title=&quot;tooltipExplInc&quot; /&gt;
        ///        &lt;div v-if=&quot;colPageCount &gt; 0&quot;&gt;
        ///            &lt;table-scroll-component :min=&quot;0&quot; :max=&quot;colPageCount&quot; :width=&quot;&apos;600px&apos;&quot; :height=&quot;&apos;10px&apos;&quot; :transform=&quot;transFormString&quot; :pagestructure=&quot;colStructure&quot;&gt;&lt;/table [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffVolumeTable {
            get {
                return ResourceManager.GetString("tmplBuffVolumeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Boons&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Offensive Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasSupBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 2}&quot; @click=&quot;tab = 2&quot;&gt;Support Buffs&lt;/a&gt;
        ///            &lt;/li&gt;
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBuffVolumeTables {
            get {
                return ResourceManager.GetString("tmplBuffVolumeTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-end&quot; :style=&quot;{&apos;height&apos;: height}&quot;&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Encounter Specifics&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.encounterSecifics&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Others&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-display :buffarray=&quot;data.others&quot;&gt;&lt;/combat-replay-buff-display&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;isPresent(&apos;Conditions&apos;)&quot;&gt;
        ///            &lt;combat-replay-buff-disp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayActorBuffStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorBuffStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex align-items-center actor-rotation&quot;&gt;
        ///        &lt;div v-if=&quot;rotation.current&quot;&gt;
        ///            &lt;img class=&quot;icon-ll&quot; :class=&quot;getIconClass(rotation.current)&quot; :src=&quot;rotation.current.skill.icon&quot; :title=&quot;getTooltip(rotation.current)&quot;/&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-else class=&quot;empty-icon-ll&quot;&gt;
        ///
        ///        &lt;/div&gt;
        ///        &lt;div v-for=&quot;next in rotation.nexts&quot;&gt;
        ///            &lt;img class=&quot;icon-l&quot; :class=&quot;getIconClass(next)&quot; :src=&quot;next.skill.icon&quot; :title=&quot;getTooltip(next)&quot;/&gt;
        ///        &lt;/div&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayActorRotation {
            get {
                return ResourceManager.GetString("tmplCombatReplayActorRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot; style=&quot;width: 750px;&quot;&gt;
        ///        &lt;div v-if=&quot;showNormalPhases&quot; class=&quot;mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center&quot; style=&quot;max-width: 700px;&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot; v-for=&quot;(phase, id) in phases&quot;
        ///                    v-show=&quot;!phase.breakbarPhase&quot;
        ///                    :data-original-title=&quot;phase.durationS + &apos; seconds &lt;br /&gt; Start: &apos; + phase.start + &apos;&lt;br /&gt; End: &apos; + pha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayAnimationControl {
            get {
                return ResourceManager.GetString("tmplCombatReplayAnimationControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;false&quot; :ignorebreakbar=&quot;false&quot; :style=&quot;{&apos;width&apos;: selectorWidth + &apos;px&apos;}&quot; :column=&quot;selectorWidth &lt; 280&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;combat-replay-damage-stats-component :encounters=&quot;reactiveLogData.encounters&quot;:time=&quot;time&quot; :playerid=&quot;selectedplayerid&quot; :graphdata=&quot;grap [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayDamageData {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;div v-if=&quot;rowPageCount &gt; 0&quot; style=&quot;width:25px;&quot;&gt;
        ///                &lt;table-scroll-component :min=&quot;0&quot; :max=&quot;rowPageCount&quot; :width=&quot;&apos;230px&apos;&quot; :height=&quot;&apos;10px&apos;&quot; :transform=&quot;colPageCount &gt; 0 ? &apos;translate(-100px, 210px) rotate(90deg)&apos; : &apos;translate(-100px, 185px) rotate(90deg)&apos; &quot; :pagestructure=&quot;rowStructure&quot;&gt;&lt;/table-scroll-component&gt;
        ///            &lt;/div&gt;
        ///            &lt;div&gt;
        ///                &lt;div v-if=&quot;colPageCount &gt; 0&quot;&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayDamageTable {
            get {
                return ResourceManager.GetString("tmplCombatReplayDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot; style=&quot;max-width: 500px;&quot;&gt;           
        ///        &lt;h4&gt;General Settings&lt;/h4&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center flex-wrap&quot;&gt;
        ///            &lt;div class=&quot;form-check mb-2 mr-2&quot; :data-original-title=&quot;&apos;Viewpoint will follow selected actor, as long as selected actor is drawn&apos;&quot;&gt;
        ///                &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;followCheck&quot; 
        ///                    :checked=&quot;getAnimator().dis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayExtraDecorations {
            get {
                return ResourceManager.GetString("tmplCombatReplayExtraDecorations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-center&quot;&gt;
        ///        &lt;div id=&quot;combat-replay-mechanics-list&quot; class=&quot;combat-replay-mechanics-list-container d-flex d-flex-row justify-content-center w-100 scrollable-y&quot;
        ///            style=&quot;max-width:450px&quot;&gt;
        ///            &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///                &lt;thead&gt;
        ///                    &lt;tr&gt;
        ///                        &lt;th style=&quot;width:100px&quot;&gt;Time&lt;/th&gt;
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayMechanicsList {
            get {
                return ResourceManager.GetString("tmplCombatReplayMechanicsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row flex-wrap justify-content-center align-items-start mb-2&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale85&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: buffs}&quot; @click=&quot;buffs = !buffs&quot;&gt;
        ///                    Show Buffs
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: rotation}&quot; @click=&quot;rotation = !rotatio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayersStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffs &amp;&amp; buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;playerindex&quot; :enemy=&quot;false&quot; :buffstoshow=&quot;buffstoshow&quot;&gt;&lt;/combat-replay-actor-buffs-stats-component&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1 align-items-center player-status-rotation&quot;&gt;
        ///            &lt;combat-replay-player-status-component :time=&quot;time&quot; :playerindex=&quot;playerindex&quot;&gt;&lt;/combat-replay-player-status-component&gt;
        ///            &lt;combat-replay-actor-rotation-component v-if= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayerStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;player-status&quot; :style=&quot;{&apos;background&apos;: getHPGradient(time, status)}&quot; @click=&quot;select&quot; :data-original-title=&quot;player.name + &apos; - &apos; + player.acc&quot;&gt;
        ///        &lt;h6 class=&quot;actor-shorten-cr text-center&quot;&gt;     
        ///            &lt;img v-for=&quot;(marker, index) in activeMarkers()&quot; :src=&quot;marker.imageUrl&quot; height=&quot;16&quot; width=&quot;16&quot;&gt;
        ///            &lt;img :src=&quot;player.icon&quot; :alt=&quot;player.profession&quot; height=&quot;16&quot; width=&quot;16&quot;&gt;
        ///            {{player.name}}
        ///        &lt;/h6&gt;     
        ///        &lt;p v-if=&quot;hasHealth&quot; class=&quot;text-rig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayPlayerStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayPlayerStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center&quot;&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Players&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;!targetless&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Targets&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li class=&quot;nav-item&quot;&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayStatusData {
            get {
                return ResourceManager.GetString("tmplCombatReplayStatusData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mb-1 scale65&quot;&gt;
        ///            &lt;li v-for=&quot;(buffType, index) in possibleBuffs&quot; class=&quot;ml-1 mr-1&quot;&gt;
        ///                &lt;input :id=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot; type=&quot;checkbox&quot; :value=&quot;buffType&quot; v-model=&quot;buffsToShow&quot; /&gt;
        ///                &lt;label :for=&quot;&apos;crtar-possibleBuffs-&apos; + index&quot;&gt;{{buffType}}&lt;/label&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div class=&quot;mt-1 combat-actor-status-container scrollable-y&quot;&gt;
        ///            &lt;d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetsStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetsStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;combat-replay-actor-buffs-stats-component v-if=&quot;buffstoshow.length &gt; 0&quot; :time=&quot;time&quot; :actorindex=&quot;targetindex&quot; :enemy=&quot;true&quot; :buffstoshow=&quot;buffstoshow&quot;/&gt;
        ///        &lt;div class=&quot;d-flex mb-1 mt-1&quot;&gt;
        ///            &lt;combat-replay-target-status-component :time=&quot;time&quot; :targetindex=&quot;targetindex&quot;/&gt;
        ///            &lt;combat-replay-actor-rotation-component :time=&quot;time&quot; :actorindex=&quot;targetindex&quot; :enemy=&quot;true&quot;/&gt;
        ///        &lt;/div&gt;
        ///        &lt;div v-if=&quot;hasBreakbarPercent&quot; class=&quot;cr-breakbar-phase-dis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetStats {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center&quot;&gt;
        ///        &lt;div class=&quot;target-status&quot; :style=&quot;{&apos;background&apos;: getHPGradient(time, status)}&quot; @click=&quot;select&quot; :title=&quot;target.name + &apos; - &apos; + target.health + &apos; health&apos;&quot;&gt;
        ///            &lt;h6 class=&quot;actor-shorten-cr text-center&quot;&gt;
        ///                &lt;img v-for=&quot;(marker, index) in activeMarkers()&quot; :src=&quot;marker.imageUrl&quot; height=&quot;16&quot; width=&quot;16&quot;&gt;
        ///                &lt;img :src=&quot;target.icon&quot; height=&quot;18&quot; width=&quot;18&quot;/&gt;
        ///                {{target [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayTargetStatus {
            get {
                return ResourceManager.GetString("tmplCombatReplayTargetStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex mt-2 justify-content-center&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-column align-items-center mr-2&quot; style=&quot;margin-left: auto; width:620px;&quot;&gt;
        ///            &lt;combat-replay-damage-data-component :time=&quot;animationStatus.time&quot; :selectedplayerid=&quot;animationStatus.selectedActorID&quot;&gt;
        ///            &lt;/combat-replay-damage-data-component&gt;
        ///            &lt;combat-replay-extra-decorations-component :light=&quot;light&quot;&gt;&lt;/combat-replay-extra-decorations-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;combat-replay-a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCombatReplayUI {
            get {
                return ResourceManager.GetString("tmplCombatReplayUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;conditions-stats-table&apos;&quot; :condition=&quot;true&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;conditions-stats-table&apos;&quot; :buffs=&quot;conditions&quot; :playerdata=&quot;buffData[0]&quot; :sums=&quot;buffData[1]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;conditions-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        template: `${tem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplConditionsTable {
            get {
                return ResourceManager.GetString("tmplConditionsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-volume-table-component :key=&quot;&apos;conditions-volume-stats-table&apos;&quot; :outgoing=&quot;false&quot;
        ///            :id=&quot;&apos;conditions-volume-stats-table&apos;&quot; :buffs=&quot;conditions&quot; :playerdata=&quot;buffData[0]&quot; :sums=&quot;buffData[1]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-volume-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;conditions-volume-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplConditionsVolumeTable {
            get {
                return ResourceManager.GetString("tmplConditionsVolumeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistPlayer {
            get {
                return ResourceManager.GetString("tmplDamageDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot; class=&quot;mb-1 mt-1&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                    {{actor.name}} did {{round3(100*dmgdist.contributedDamage/dmgdist.totalDamage)}}% of its master&apos;s total
        ///                    {{istarget ? &apos;Target&apos; :&apos;&apos;}} damage ({{dmgdist.contributedDamage}})
        ///                &lt;/p&gt;
        ///                &lt;p v-if=&quot;hasBreakbarDamage &amp;&amp; dmgdist.contributedBreakbarDamage &gt; 0&quot; style=&quot;display: table-row;&quot;&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistTable {
            get {
                return ResourceManager.GetString("tmplDamageDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;target.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{target.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in target.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageDistTarget {
            get {
                return ResourceManager.GetString("tmplDamageDistTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;specmode = base&quot; :class=&quot;{active: specmode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div&gt;
        ///            &lt;div v-for=&quot;(spec, index) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///                &lt;div v-show=&quot;specToBase[spec.name] === specmode&quot;&gt;
        ///                    &lt;h3 class=&quot;tex [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierPersStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierPersStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li v-if=&quot;itemModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displaymode === 0}&quot; @click=&quot;displaymode = 0&quot;&gt; Gear Based Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;commonModifiers.length &gt; 0&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: displaymode === 1}&quot; @click=&quot;displaymode = 1&quot;&gt; Shared Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierStats {
            get {
                return ResourceManager.GetString("tmplDamageModifierStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-if=&quot;hasIncDamageMods &amp;&amp; hasOutDamageMods&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt; Outgoing Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt; Incoming Damage
        ///                    Modifiers &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgmodifie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierStatsContainer {
            get {
                return ResourceManager.GetString("tmplDamageModifierStatsContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;colPageCount &gt; 0&quot;&gt;
        ///            &lt;table-scroll-component :min=&quot;0&quot; :max=&quot;colPageCount&quot; :width=&quot;&apos;600px&apos;&quot; :height=&quot;&apos;10px&apos;&quot; :transform=&quot;transFormString&quot; :pagestructure=&quot;colStructure&quot;&gt;&lt;/table-scroll-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;Su [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageModifierTable {
            get {
                return ResourceManager.GetString("tmplDamageModifierTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;Sub&lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;&lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;getHeaderClass(&apos;Name&apos;)&quot; @click=&quot;sortBy(&apos;Name&apos;)&quot;&gt;Name&lt;/th&gt;
        ///                   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageTable {
            get {
                return ResourceManager.GetString("tmplDamageTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageTakenDistPlayer {
            get {
                return ResourceManager.GetString("tmplDamageTakenDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;target.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{target.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in target.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDamageTakenDistTarget {
            get {
                return ResourceManager.GetString("tmplDamageTakenDistTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;recaps&quot;&gt;
        ///            &lt;div v-for=&quot;index in phaseRecaps&quot;&gt;
        ///                &lt;h3 v-if=&quot;phaseRecaps.length &gt; 1&quot; class=&quot;text-center&quot;&gt;
        ///                    Death #{{index + 1}}
        ///                &lt;/h3&gt;
        ///                &lt;div v-if=&quot;!recaps[index].toKill&quot;&gt;
        ///                    &lt;h3 class=&quot;text-center&quot;&gt;Player was instantly killed after down&lt;/h3&gt;
        ///                    &lt;div class=&quot;text-center&quot;&gt;
        ///                        Took {{data.totalDamage.down[index]}}
        ///                         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDeathRecap {
            get {
                return ResourceManager.GetString("tmplDeathRecap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;debuff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;debuff-stats-table&apos;&quot; :buffs=&quot;debuffs&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;debuff-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        template: `${template}`,
        ///        data: fu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDebuffTable {
            get {
                return ResourceManager.GetString("tmplDebuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-volume-table-component :key=&quot;&apos;debuff-volume-stats-table&apos;&quot;  :outgoing=&quot;false&quot;
        ///            :id=&quot;&apos;debuff-volume-stats-table&apos;&quot; :buffs=&quot;debuffs&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-volume-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;debuff-volume-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        template: `${template}`,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDebuffVolumeTable {
            get {
                return ResourceManager.GetString("tmplDebuffVolumeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;
        ///                        Sub
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;
        ///
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;getHe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDefenseTable {
            get {
                return ResourceManager.GetString("tmplDefenseTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;      
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;false&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;dps-graph-co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDPSGraph {
            get {
                return ResourceManager.GetString("tmplDPSGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;     
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-wrap justify-content-center mr-3 scale85&quot; :class=&quot;{&apos;flex-row&apos;: !column, &apos;flex-column&apos;: column}&quot;&gt;
        ///            &lt;li class=&quot;nav-item d-flex flex-row justify-content-center align-items-center&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.dpsmode = 0&quot; :class=&quot;{active: data.dpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phaseduration &gt; 4&quot; class=&quot;nav-item d-fle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDPSGraphModeSelector {
            get {
                return ResourceManager.GetString("tmplDPSGraphModeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card fight-summary&quot; style=&quot;min-width: 350px;&quot;&gt;
        ///        &lt;h3 class=&quot;card-header text-center&quot;&gt;
        ///            &lt;p&gt;{{ encounter.name }}&lt;/p&gt;
        ///            &lt;ul v-if=&quot;isMultiEncounterLog&quot; class=&quot;dropdown-menu p-2 font-weight-normal scrollabledropdown&quot; style=&quot;min-width: 165px; max-width: 165px;&quot;&gt;
        ///                &lt;li v-for=&quot;(encounterData, index) in encountersData&quot; :key=&quot;index&quot; :style=&quot;index === 0 ? {&apos;border-bottom&apos;: &apos;2px solid #bbb&apos;} : &apos;&apos;;&quot;&gt;
        ///                    &lt;input :id=&quot;&apos;encounter-&apos; +  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplEncounter {
            get {
                return ResourceManager.GetString("tmplEncounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;enhancement-buff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;enhancement-buff-stats-table&apos;&quot; :buffs=&quot;enhancements&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;enhancement-buff-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        templat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplEnhancementBuffTable {
            get {
                return ResourceManager.GetString("tmplEnhancementBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;mt-2&quot;&gt;
        ///        &lt;div v-if=&quot;data.start.length&quot;&gt;
        ///            Started with:
        ///            &lt;ul&gt;
        ///                &lt;li v-for=&quot;initial in data.start&quot;&gt;
        ///                    {{initial.name}} &lt;img class=&quot;icon&quot; :alt=&quot;initial.name&quot; :data-original-title=&quot;initial.description&quot;
        ///                        :src=&quot;initial.icon&quot;&gt;
        ///                    {{initial.stack &gt; 1 ? &quot;(&quot;+initial.stack+&quot;)&quot; : &quot;&quot;}} ({{initial.duration}}
        ///                    seconds remaining)
        ///                &lt;/li&gt;
        ///            &lt;/ul&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplFood {
            get {
                return ResourceManager.GetString("tmplFood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;
        ///                        Sub
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;
        ///
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;getHe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGameplayTable {
            get {
                return ResourceManager.GetString("tmplGameplayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;gear-buff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;gear-buff-stats-table&apos;&quot; :buffs=&quot;gears&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;gear-buff-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        template: `${template}`,
        ///        d [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGearBuffTable {
            get {
                return ResourceManager.GetString("tmplGearBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-volume-table-component :key=&quot;&apos;gear-buff-volume-stats-table&apos;&quot;  :outgoing=&quot;false&quot;
        ///            :id=&quot;&apos;gear-buff-volume-stats-table&apos;&quot; :buffs=&quot;gears&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-volume-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;gear-buff-volume-table-component&quot;, {
        ///        props: [ &apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        template: `${templa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGearBuffVolumeTable {
            get {
                return ResourceManager.GetString("tmplGearBuffVolumeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div :id=&quot;id&quot; class=&quot;d-flex flex-row justify-content-center&quot;&gt;&lt;/div&gt;
        ///        &lt;div v-if=&quot;!removerangecontrol&quot; style=&quot;position:absolute; margin-top: -60px;margin-left: 100px; z-index: 1;&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row align-items-center&quot;&gt;
        ///                &lt;custom-numberform-component class=&quot;mr-1&quot; style=&quot;width: 100px;&quot; :minValue=&quot;-1e6&quot; :maxValue=&quot;1e6&quot; :id=&quot;id+&apos;xMin&apos;&quot;
        ///                    :placeholderValue=&quot;0&quot;&gt;&lt;/custom-numberform-component&gt;
        ///                &lt;custom-num [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGraph {
            get {
                return ResourceManager.GetString("tmplGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Total&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-if=&quot;!targetless&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-if=&quot;!targetless&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 2}&quot; @click=&quot;mode = 2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplGraphStats {
            get {
                return ResourceManager.GetString("tmplGraphStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingDistPlayer {
            get {
                return ResourceManager.GetString("tmplHealingDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;actor !== null&quot; class=&quot;mb-1 mt-1&quot;&gt;
        ///            &lt;div v-if=&quot;isminion&quot;&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///                    {{actor.name}} did {{round3(100*healingdist.contributedHealing/healingdist.totalHealing)}}% of its master&apos;s total
        ///                    {{istarget ? &apos;Target&apos; :&apos;&apos;}} healing ({{healingdist.contributedHealing}})
        ///                &lt;/p&gt;
        ///            &lt;/div&gt;
        ///            &lt;div v-else&gt;
        ///                &lt;p style=&quot;display: table-row;&quot;&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingDistTable {
            get {
                return ResourceManager.GetString("tmplHealingDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1&quot; id=&quot;healing-phase-nav&quot;&gt;
        ///            &lt;phase-component :phases=&quot;reactiveLogdata.phases&quot; :encounters=&quot;reactiveLogdata.encounters&quot;&gt;&lt;/phase-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mb-2 mt-2&quot; id=&quot;healing-actors&quot;&gt;
        ///            &lt;div class=&quot;flex-row justify-content-center align-items-center flex-wrap mr-5&quot;&gt;
        ///                &lt;player-target-component :players=&quot;reactiveLogdata.players&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingExtensionView {
            get {
                return ResourceManager.GetString("tmplHealingExtensionView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 0}&quot; @click=&quot;mode = 0&quot;&gt;Total&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 1}&quot; @click=&quot;mode = 1&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: mode === 2}&quot; @click=&quot;mode = 2&quot;&gt;Cleave&lt;/a&gt;
        ///                &lt;/li&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingGraphStats {
            get {
                return ResourceManager.GetString("tmplHealingGraphStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Outgoing Healing Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Incoming Healing Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 2}&quot; @click=&quot;tab = 2&quot;&gt;Support Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingStatTables {
            get {
                return ResourceManager.GetString("tmplHealingStatTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;player.minions.length &gt; 0&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///                &lt;li&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === -1}&quot; @click=&quot;distmode = -1&quot;&gt;{{player.name}}&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li v-for=&quot;(minion, mindex) in player.minions&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; :class=&quot;{active: distmode === mindex}&quot;
        ///                        @click=&quot;distmode = mindex&quot;&gt;{{minion.name}}&lt;/a&gt;
        ///                &lt;/li&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHealingTakenDistPlayer {
            get {
                return ResourceManager.GetString("tmplHealingTakenDistPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;      
        ///        &lt;hps-graph-mode-selector-component :data=&quot;graphhealingdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/hps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;hps-graph-component&quot;, {
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHPSGraph {
            get {
                return ResourceManager.GetString("tmplHPSGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;     
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-wrap justify-content-center mr-3 scale85&quot; :class=&quot;{&apos;flex-row&apos;: !column, &apos;flex-column&apos;: column}&quot;&gt;
        ///            &lt;li class=&quot;nav-item d-flex flex-row justify-content-center align-items-center&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;data.hpsmode = 0&quot; :class=&quot;{active: data.hpsmode === 0}&quot;&gt;Full&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;phaseduration &gt; 4&quot; class=&quot;nav-item d-fle [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplHPSGraphModeSelector {
            get {
                return ResourceManager.GetString("tmplHPSGraphModeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :index=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;
        ///                        Sub
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;
        ///
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplIncomingHealingTable {
            get {
                return ResourceManager.GetString("tmplIncomingHealingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///
        ///&lt;head&gt;
        ///    &lt;meta charset=&quot;utf-8&quot;&gt;
        ///    &lt;link id=&quot;theme&quot; rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.1.1/${bootstrapTheme}/bootstrap.min.css&quot;
        ///          crossorigin=&quot;anonymous&quot;&gt;
        ///    &lt;!--${Css}--&gt;
        ///    &lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt;
        ///    &lt;script src=&quot;https://code.jquery.com/jquery-3.7.0.min.js&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
        ///    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMain {
            get {
                return ResourceManager.GetString("tmplMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1&quot; id=&quot;phase-nav&quot;&gt;
        ///            &lt;phase-component :phases=&quot;reactiveLogdata.phases&quot; :encounters=&quot;reactiveLogdata.encounters&quot;&gt;&lt;/phase-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mb-2 mt-2&quot; id=&quot;actors&quot;&gt;
        ///            &lt;div v-if=&quot;hasTargets&quot; v-show=&quot;tab !== 5&quot; :class=&quot;{&apos;d-flex&apos;: tab !== 5}&quot;
        ///                class=&quot;flex-row justify-content-center align-items-center flex-wrap mr-5&quot;&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMainView {
            get {
                return ResourceManager.GetString("tmplMainView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;          
        ///        &lt;keep-alive&gt;
        ///            &lt;mechanics-table-component v-for=&quot;(phase, id) in phases&quot; :key=&quot;&apos;mechanics&apos; + id&quot; v-if=&quot;id === phaseindex&quot;
        ///                :phaseindex=&quot;id&quot; :playerindex=&quot;playerindex&quot;&gt;
        ///            &lt;/mechanics-table-component&gt;      
        ///        &lt;/keep-alive&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;mechanics-stats-component&quot;, {
        ///        props: [&quot;phaseindex&quot;, &quot;playerindex&quot;],
        ///        template: `${template}`,
        ///        data: function () {
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMechanicsStats {
            get {
                return ResourceManager.GetString("tmplMechanicsStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;playerColPageCount &gt; 0&quot;&gt;
        ///            &lt;table-scroll-component :min=&quot;0&quot; :max=&quot;playerColPageCount&quot; :width=&quot;&apos;600px&apos;&quot; :height=&quot;&apos;10px&apos;&quot; :transform=&quot;transFormString&quot; :pagestructure=&quot;playerColStructure&quot;&gt;&lt;/table-scroll-component&gt;
        ///        &lt;/div&gt;
        ///        &lt;table v-if=&quot;playerMechHeader.length &gt; 0&quot; class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; :id=&quot;tablePid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getPlay [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMechanicsTable {
            get {
                return ResourceManager.GetString("tmplMechanicsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;nourishement-buff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;nourishement-buff-stats-table&apos;&quot; :buffs=&quot;nourishments&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;nourishement-buff-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],
        ///        temp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplNourishmentBuffTable {
            get {
                return ResourceManager.GetString("tmplNourishmentBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div v-if=&quot;!targetless&quot; class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;nav nav-pills scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 1&quot; data-original-title=&quot;Against selected target(s).&quot;
        ///                       :class=&quot;{active: mode}&quot;&gt;Target&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;mode = 0&quot; data-original-title=&quot;Ag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplOffensiveTable {
            get {
                return ResourceManager.GetString("tmplOffensiveTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;buff-table-component :key=&quot;&apos;otherconsumable-buff-stats-table&apos;&quot; :condition=&quot;false&quot; :generation=&quot;false&quot;
        ///            :id=&quot;&apos;otherconsumable-buff-stats-table&apos;&quot; :buffs=&quot;otherConsumables&quot; :playerdata=&quot;buffData&quot; :sums=&quot;[]&quot; :playerindex=&quot;playerindex&quot; :hidecustom=&quot;false&quot;&gt;
        ///        &lt;/buff-table-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///    Vue.component(&quot;otherconsumable-buff-table-component&quot;, {
        ///        props: [&apos;playerindex&apos;, &apos;activeduration&apos;],
        ///        mixins: [buffComponent],        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplOtherConsumableBuffTable {
            get {
                return ResourceManager.GetString("tmplOtherConsumableBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :index=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;
        ///                        Sub
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;
        ///
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplOutgoingHealingTable {
            get {
                return ResourceManager.GetString("tmplOutgoingHealingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;persBuffMode = base&quot; :class=&quot;{active: persBuffMode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;(spec, id) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///            &lt;div v-show=&quot;specToBase[spec.name] === persBuffMode&quot;&gt;
        ///                &lt;h3 class=&quot;text-center&quot;&gt;{{ spec. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPersonalBuffTable {
            get {
                return ResourceManager.GetString("tmplPersonalBuffTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-pills d-flex flex-row justify-content-center mt-1 mb-1 scale85&quot;&gt;
        ///            &lt;li v-for=&quot;base in bases&quot; class=&quot;nav-item&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;persBuffMode = base&quot; :class=&quot;{active: persBuffMode === base}&quot;&gt;{{ base }}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;(spec, id) in orderedSpecs&quot; class=&quot;mt-1 mb-1&quot;&gt;
        ///            &lt;div v-show=&quot;specToBase[spec.name] === persBuffMode&quot;&gt;
        ///                &lt;h3 class=&quot;text-center&quot;&gt;{{ spec. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPersonalBuffVolumeTable {
            get {
                return ResourceManager.GetString("tmplPersonalBuffVolumeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul v-if=&quot;showNormalPhases&quot; class=&quot;nav nav-pills d-flex flex-row justify-content-center&quot;&gt;
        ///            &lt;li class=&quot;nav-item&quot; v-for=&quot;phase in phasesToUse&quot; v-show=&quot;!getPhaseData(phase.index).breakbarPhase&quot;
        ///                :data-original-title=&quot;getPhaseTooltip(phase.index)&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; @click=&quot;select(phase)&quot; :class=&quot;{active: phase.active}&quot;&gt;{{getPhaseData(phase.index).name}}&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-if=&quot;hasBreakbarPhases&quot; clas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPhase {
            get {
                return ResourceManager.GetString("tmplPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Uptimes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Volumes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;buff-stats-player-component v-if=&quot;tab == 0&quot; :key=&quot;&apos;player-buff-tables&apos;&quot;:phaseindex=&quot;phaseindex&quot;
        ///                :playeri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerBuffTab {
            get {
                return ResourceManager.GetString("tmplPlayerBuffTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h3 v-for=&quot;player in players&quot; :key=&quot;player.id&quot; v-show=&quot;player.id === activeInPhasePlayer&quot;
        ///            class=&quot;text-center mt-2&quot;&gt;&lt;img :alt=&quot;player.profession&quot; class=&quot;icon&quot; :src=&quot;player.icon&quot;&gt;{{player.name}}&lt;/h3&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-show=&quot;activeInPhasePlayer &gt; -1&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tabmode === 0}&quot; @click=&quot;tabmode = 0&quot;&gt;
        ///                    Outgoing Healing
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerHealingStats {
            get {
                return ResourceManager.GetString("tmplPlayerHealingStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;healingdist-player-component v-if=&quot;tabmode === 0&quot; :key=&quot;&apos;healingdist&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot; :activetargets=&quot;activetargets&quot;&gt;&lt;/healingdist-player-component&gt;
        ///            &lt;healingtakendist-player-component v-if=&quot;tabmode ===1&quot; :key=&quot;&apos;healingtaken&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot;&gt;&lt;/healingtakendist-player-component&gt;
        ///            &lt;player-healin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerHealingTab {
            get {
                return ResourceManager.GetString("tmplPlayerHealingTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;hps-graph-mode-selector-component :data=&quot;graphhealingdata&quot;
        ///            :phaseduration=&quot;this.phase.end - this.phase.start&quot; :phasehassubphases=&quot;!!this.phase.subPhases&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/hps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerHealingTabGraph {
            get {
                return ResourceManager.GetString("tmplPlayerHealingTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row&quot;&gt;
        ///        &lt;img class=&quot;icon mr-1&quot; :src=&quot;UIIcons.QuestionMark&quot; :data-original-title=&quot;scoreExpl&quot; /&gt;
        ///        &lt;div class=&quot;d-flex flex-column&quot; style=&quot;max-width: 900px;&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-wrap mb-1&quot;&gt;
        ///                &lt;div v-for=&quot;player in group&quot;
        ///                    class=&quot;player-cell d-flex flex-column align-items-center justify-content-center&quot;
        ///                    :class=&quot;{active: player.active}&quot; @click=&quot;select(player.id)&quot;&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayers {
            get {
                return ResourceManager.GetString("tmplPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div style=&quot;width: 100%;&quot;&gt;
        ///        &lt;div style=&quot;position:absolute; margin-top: 60px; z-index: 1;&quot;&gt;
        ///            &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; title=&quot;Filter Players&quot; style=&quot;font-size: 1.1em;&quot;&gt;
        ///                Players &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;
        ///            &lt;/a&gt;
        ///            &lt;ul class=&quot;dropdown-menu p-2 font-weight-normal scrollabledropdown&quot; style=&quot;min-width: 165px; max-width: 165px;&quot;&gt;
        ///                &lt;div class=&quot;d-flex flex-column justify-content-center align-i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayersRotation {
            get {
                return ResourceManager.GetString("tmplPlayersRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-column align-items-center justify-content-center&quot;&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;Players&apos; Rotation&lt;/h3&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;player-rotations-component v-for=&apos;(phase, index) in phases&apos; :key=&quot;&apos;rotations&apos; + index&quot;
        ///                v-if=&quot;index === phaseindex&quot; :phaseindex=&quot;phaseindex&quot; :light=&quot;light&quot; :playerindex=&quot;playerindex&quot;&gt;
        ///                &lt;/player-rotation-component&gt;
        ///        &lt;/keep-alive&gt;
        ///    &lt;/div&gt;
        ///&lt;/template&gt;
        ///
        ///&lt;script&gt;
        ///
        ///    Vue.co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayersRotationTab {
            get {
                return ResourceManager.GetString("tmplPlayersRotationTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;h3 v-for=&quot;player in players&quot; :key=&quot;player.id&quot; v-show=&quot;player.id === activeInPhasePlayer&quot;
        ///            class=&quot;text-center mt-2&quot;&gt;&lt;img :alt=&quot;player.profession&quot; class=&quot;icon&quot; :src=&quot;player.icon&quot;&gt;{{player.name}}&lt;/h3&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot; v-show=&quot;activeInPhasePlayer &gt; -1&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tabmode === 0}&quot; @click=&quot;tabmode = 0&quot;&gt;
        ///                    Outgoing Damage
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerStats {
            get {
                return ResourceManager.GetString("tmplPlayerStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-player-component v-if=&quot;tabmode === 0&quot; :key=&quot;&apos;dist&apos; + playerindex&quot; :playerindex=&quot;playerindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot; :activetargets=&quot;activetargets&quot;&gt;&lt;/dmgdist-player-component&gt;
        ///            &lt;dmgtakendist-player-component v-if=&quot;tabmode ===1&quot; :key=&quot;&apos;taken&apos; + playerindex&quot; 
        ///                :playerindex=&quot;playerindex&quot; :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtakendist-player-component&gt;
        ///            &lt;player-graph-tab-component v-for=&quot;(ph, id) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerTab {
            get {
                return ResourceManager.GetString("tmplPlayerTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot; :phaseduration=&quot;this.phase.end - this.phase.start&quot;
        ///            :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;false&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplPlayerTabGraph {
            get {
                return ResourceManager.GetString("tmplPlayerTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;card&quot;&gt;
        ///        &lt;div class=&quot;card-body container&quot;&gt;
        ///            &lt;p&gt;&lt;u&gt;Fill&lt;/u&gt;&lt;/p&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#0000FF; border-style:solid; border-width: 1px; border-color:#000000; color:#FFFFFF&quot;&gt;
        ///                Hit
        ///                without aftercast
        ///            &lt;/span&gt;
        ///            &lt;span style=&quot;padding: 2px; background-color:#00FF00; border-style:solid; border-width: 1px; border-color:#000000; color:#000000&quot;&gt;
        ///                Hit
        ///                w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplRotationLegend {
            get {
                return ResourceManager.GetString("tmplRotationLegend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center mt-1 mb-1&quot;&gt;
        ///            &lt;ul class=&quot;d-flex flex-row justify-content-center nav nav-pills mr-1 scale85&quot;&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;autoattack = !autoattack&quot;
        ///                       :class=&quot;{active: autoattack}&quot;&gt;Show auto attacks&lt;/a&gt;
        ///                &lt;/li&gt;
        ///                &lt;li class=&quot;nav-item&quot;&gt;
        ///                    &lt;a class=&quot;nav-link&quot; @click=&quot;hideInterruptedAA = !hide [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplSimpleRotation {
            get {
                return ResourceManager.GetString("tmplSimpleRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Damage Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Gameplay Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 4}&quot; @click=&quot;tab = 4&quot;&gt;Offensive Stats&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li&gt;
        ///                &lt;a c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplStatTables {
            get {
                return ResourceManager.GetString("tmplStatTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot; :id=&quot;tableid&quot;&gt;
        ///            &lt;thead&gt;
        ///                &lt;tr&gt;
        ///                    &lt;th class=&quot;sub-cell&quot; :class=&quot;getHeaderClass(&apos;Sub&apos;)&quot; @click=&quot;sortBy(&apos;Sub&apos;)&quot;&gt;
        ///                        Sub
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;prof-cell&quot; :class=&quot;getHeaderClass(&apos;Prof&apos;)&quot; @click=&quot;sortBy(&apos;Prof&apos;)&quot;&gt;
        ///
        ///                    &lt;/th&gt;
        ///                    &lt;th class=&quot;text-left&quot; :class=&quot;getHe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplSupportTable {
            get {
                return ResourceManager.GetString("tmplSupportTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///            &lt;li&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 0}&quot; @click=&quot;tab = 0&quot;&gt;Uptimes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///            &lt;li v-if=&quot;hasOffBuffs&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: tab === 1}&quot; @click=&quot;tab = 1&quot;&gt;Volumes&lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;buff-stats-target-component v-if=&quot;tab == 0&quot; :key=&quot;&apos;target-buff-tables&apos;&quot;:targetindex=&quot;targetindex&quot;
        ///            :phaseinde [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetBuffTab {
            get {
                return ResourceManager.GetString("tmplTargetBuffTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center mb-2&quot;&gt;
        ///        &lt;img v-if=&quot;target.health &gt; 0&quot; :src=&quot;UIIcons.VitalityChar&quot; alt=&quot;Health&quot;
        ///            class=&quot;icon&quot; :data-original-title=&quot;&apos;Health: &apos; + target.health&quot;&gt;
        ///        &lt;img v-if=&quot;target.tough &gt; 0&quot; :src=&quot;UIIcons.ToughnessChar&quot; alt=&quot;Toughness&quot;
        ///            class=&quot;icon&quot; hbHeight :data-original-title=&quot;&apos;Toughness: &apos; + target.tough&quot;&gt;
        ///        &lt;img v-if=&quot;target.hbWidth &gt; 0&quot; :src=&quot;UIIcons.HitboxWidth&quot; alt=&quot;Hitbox Width&quot;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetData {
            get {
                return ResourceManager.GetString("tmplTargetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;div class=&quot;d-flex flex-column&quot;&gt;
        ///            &lt;div v-for=&quot;group in groups&quot; class=&quot;d-flex flex-row mb-1 align-items-center&quot;&gt;
        ///                &lt;div&gt;
        ///                    &lt;ul class=&quot;scale85 nav nav-pills&quot;&gt;
        ///                        &lt;li class=&quot;nav-item&quot;&gt;
        ///                            &lt;a class=&quot;nav-link&quot; @click=&quot;selectGroup(group)&quot;&gt;
        ///                                Select
        ///                            &lt;/a&gt;
        ///                        &lt;/li&gt;
        ///                    &lt;/ul&gt;
        ///                &lt;/di [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetPlayers {
            get {
                return ResourceManager.GetString("tmplTargetPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div class=&quot;d-flex flex-row justify-content-center flex-wrap&quot; :style=&quot;{&apos;width&apos;: totalWidth}&quot;&gt;
        ///        &lt;div class=&quot;d-flex flex-row justify-content-center align-items-center flex-wrap&quot; style=&quot;max-width: 408px;&quot;&gt;
        ///            &lt;div v-for=&quot;target in mainTargets&quot;&gt;
        ///                &lt;img class=&quot;icon-lg mr-2 ml-2 target-cell&quot; 
        ///                    :src=&quot;getTargetData(target.id).icon&quot; 
        ///                    :alt=&quot;getTargetData(target.id).name&quot;
        ///                    :data-original-title=&quot;getTargetData(t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargets {
            get {
                return ResourceManager.GetString("tmplTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;ul v-if=&quot;phaseTargets.length &gt; 1&quot; class=&quot; nav nav-tabs&quot;&gt;
        ///            &lt;li v-for=&quot;target in phaseTargets&quot;&gt;
        ///                &lt;a class=&quot;nav-link&quot; :class=&quot;{active: simplephase.focus === target.id}&quot;
        ///                    @click=&quot;simplephase.focus = target.id&quot;&gt;
        ///                    {{target.name}}
        ///                &lt;/a&gt;
        ///            &lt;/li&gt;
        ///        &lt;/ul&gt;
        ///        &lt;div v-for=&quot;target in phaseTargets&quot; v-show=&quot;simplephase.focus === target.id&quot;&gt;
        ///            &lt;div class=&quot;d-flex flex-row just [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetStats {
            get {
                return ResourceManager.GetString("tmplTargetStats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;keep-alive&gt;
        ///            &lt;dmgdist-target-component v-if=&quot;mode === 0&quot; :key=&quot;&apos;dist&apos; + targetindex&quot; :phaseindex=&quot;phaseindex&quot;
        ///                :targetindex=&quot;targetindex&quot;&gt;&lt;/dmgdist-target-component&gt;
        ///            &lt;dmgtakendist-target-component v-if=&quot;mode === 1&quot; :targetindex=&quot;targetindex&quot; :key=&quot;&apos;taken&apos; + targetindex&quot;
        ///                :phaseindex=&quot;phaseindex&quot;&gt;&lt;/dmgtakendist-target-component&gt;
        ///            &lt;target-graph-tab-component v-for=&quot;(ph, id) in phases&quot; v-if=&quot;mode === 2 &amp;&amp; id == [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetTab {
            get {
                return ResourceManager.GetString("tmplTargetTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot; :phaseduration=&quot;this.phase.end - this.phase.start&quot;
        ///            :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;true&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-component&gt;
        ///        &lt;rotation-legend-component&gt;&lt;/rotation-legend-component&gt;
        ///    &lt;/div&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetTabGraph {
            get {
                return ResourceManager.GetString("tmplTargetTabGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;template&gt;
        ///    &lt;div&gt;
        ///        &lt;dps-graph-mode-selector-component :data=&quot;graphdata&quot; :phaseduration=&quot;this.phase.end - this.phase.start&quot;
        ///            :phasehassubphases=&quot;!!this.phase.subPhases&quot; :ignorebreakbar=&quot;true&quot; :column=&quot;false&quot;&gt;
        ///        &lt;/dps-graph-mode-selector-component&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;{{graphname}}&lt;/h3&gt;
        ///        &lt;h3 class=&quot;text-center mt-1 mb-1&quot;&gt;Buffs applied by {{player.name}}&lt;/h3&gt;
        ///        &lt;graph-component :id=&quot;graphid&quot; :layout=&quot;layout&quot; :data=&quot;computeData&quot;&gt;&lt;/graph-compon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTargetTabPerPlayerGraph {
            get {
                return ResourceManager.GetString("tmplTargetTabPerPlayerGraph", resourceCulture);
            }
        }
    }
}
